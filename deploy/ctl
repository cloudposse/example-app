#!/usr/bin/env variant
# vim:set ft=yaml

parameters:
- name: config
  default: .color
  description: "Config file that keeps track of the current color"

tasks:

  # https://istio.io/docs/tasks/traffic-management/ingress/#determining-the-ingress-ip-and-ports-when-using-an-external-load-balancer
  ingress-host:
    script: |
      kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
  # https://istio.io/docs/setup/kubernetes/quick-start/
  istio-injection:
    script: |
      kubectl label namespace testing istio-injection=enabled

  deps:
    description: "Install alpine dependencies"
    script: |
      ! which apk >/dev/null || apk add --update curl make bash git kubectl@cloudposse helm@cloudposse helmfile@cloudposse

  color:
    description: "Lookup the current color"
    script: |
      config=${CF_VOLUME_PATH:-.}/{{ get "config" }}
      if [ -f ${config} ]; then
        cat ${config}
      else
        echo "blue" | tee ${config}
      fi

  blue-green:
    description: "Trigger a blue-green deployment"

    parameters:
    - name: namespace
      default: "default"
      description: "Kubernetes namespace"

    - name: color
      type: string
      description: "Selected color to deploy"

    - name: blue
      type: string
      default: green
      description: "Flip blue color to this color"

    - name: green
      type: string
      default: blue
      description: "Flip green color to this color"

    steps:
    - task: deps
    - script: |
        config=${CF_VOLUME_PATH:-.}/{{ get "config" }}
        cur_color={{ get "color" }}
        new_color={{ get "color" | get }}
        echo "Config file is ${config}"
        echo "Updating {{ get "namespace" }}: $cur_color => $new_color"
        echo "$new_color" > ${config}
        export COLOR=$new_color
        helmfile --namespace {{ get "namespace" }} sync