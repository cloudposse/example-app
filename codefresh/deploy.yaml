version: '1.0'

stages:
  - Prepare
  - Deploy

steps:
  main_clone:
    title: "Create Context"
    stage: Prepare
    image: alpine
    commands:
    - cf_export NAMESPACE=atlantis
    - cf_export ATLANTIS_IMAGE_NAME=${{CF_DOCKER_REPO_URL}}/${{CF_REPO_NAME}}
    - cf_export ATLANTIS_IMAGE_TAG=${{CF_RELEASE_TAG}}

  set_github_deployment_status_to_pending:
    title: Set GitHub deployment status to "pending"
    stage: Deploy
    image: cloudposse/github-status-updater
    environment:
    - GITHUB_ACTION=update_state
    - GITHUB_TOKEN=${{GITHUB_TOKEN}}
    - GITHUB_OWNER=${{CF_REPO_OWNER}}
    - GITHUB_REPO=${{CF_REPO_NAME}}
    - GITHUB_REF=${{CF_REVISION}}
    - GITHUB_CONTEXT=${{STAGE}}-environment
    - GITHUB_STATE=pending
    - GITHUB_DESCRIPTION=Deploying changes to ${{NAMESPACE}} namespace
    - GITHUB_TARGET_URL=${{ATLANTIS_ATLANTIS_URL}}
    when:
      condition:
        all:
          githubNotificationsEnabled: "'${{GITHUB_NOTIFICATIONS_ENABLED}}' == 'true'"

  deploy_helmfile:
    title: "Deploy with helmfile"
    stage: "Deploy"
    image: "${{CF_DOCKER_REPO_URL}}/${{CF_REPO_NAME}}:${{CF_REVISION}}"
    working_directory: /conf/
    commands:
    # Announce the release version
    - "echo 'Preparing to deploy version ${{CF_RELEASE_TAG}}'"
    # Fetch the build-harness
    - "curl -sSL -o Makefile https://git.io/build-harness"
    # Initialize the build-harness
    - "make init"
    # Install or upgrade tiller
    - "make helm/toolbox/upsert"
    # Add kiam annotation
    - "kubectl annotate namespace atlantis 'iam.amazonaws.com/permitted=${{ATLANTIS_IAM_ROLE}}' --overwrite"
    # Deploy chart to cluster using helmfile
    - "helmfile --namespace ${{NAMESPACE}} --selector name=${{NAMESPACE}} sync"

  set_github_deployment_status_to_success:
    title: Set GitHub deployment status to "success"
    stage: "Deploy"
    image: cloudposse/github-status-updater
    environment:
    - GITHUB_ACTION=update_state
    - GITHUB_TOKEN=${{GITHUB_TOKEN}}
    - GITHUB_OWNER=${{CF_REPO_OWNER}}
    - GITHUB_REPO=${{CF_REPO_NAME}}
    - GITHUB_REF=${{CF_REVISION}}
    - GITHUB_CONTEXT=${{STAGE}}-environment
    - GITHUB_STATE=success
    - GITHUB_DESCRIPTION=Deployed to ${{NAMESPACE}} namespace
    - GITHUB_TARGET_URL=${{ATLANTIS_ATLANTIS_URL}}
    when:
      condition:
        all:
          githubNotificationsEnabled: "'${{GITHUB_NOTIFICATIONS_ENABLED}}' == 'true'"